<?php

declare(strict_types=1);

namespace Myers;

use PHPUnit\Framework\TestCase;

class CheckTest extends TestCase
{
    /**
     * @test
     * @dataProvider apply_dp
     */
    public function apply(string $v, string $exp)
    {
        // 必要だと考えたテストを実装する
        // テストメソッドを分けたりしても良い
        $this->assertSame($exp, Checker::apply($v));
    }

    function apply_dp(): array
    {
        return [
            // 通常の正しいパターンと小数点を含んだ正しいパターンをチェック
            '正三角形の正しいパターン' => ['3 3 3', '正三角形'],
            '小数点を含んだ正三角形の正しいパターン' => ['2.1 2.1 2.1', '正三角形'],
            '二等辺三角形の正しいパターン' => ['2 2 1', '二等辺三角形'],
            '小数点を含んだ二等辺三角形の正しいパターン' => ['2.5 2.5 1', '二等辺三角形'],
            '不等辺三角形の正しいパターン' => ['3 1 5', '不等辺三角形'],
            '小数点を含んだ不等辺三角形の正しいパターン' => ['3 1 5.8', '不等辺三角形'],
            // 文字列を含んでいたら不成立
            '文字列を含んだ不成立のパターン' => ['1 2 あ', '不成立'],
            // 三角形を作れないパターンで不成立
            '2つ以下の整数で不成立のパターン' => ['5 3', '不成立'],
            '4つ以上の整数で不成立のパターン' => ['5 3 3 3', '不成立'],
            '0を含んだ不成立のパターン' => ['1 1 0', '不成立'],
            'マイナスを含んで不成立のパターン' => ['-2 3 3', '不成立'],
        ];
        // 全て0とか全てマイナスというのは、1つでも含んでいたら不成立となるので不要と判断
    }
}
